submit()
submit()
?unique
submit()
reset()
submit()
?select
submit()
passed
failed
passed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed,failed)
sat
play()
sat
select(-contains(total))
select(-contains(total))
?`conditionalExtension-class`
?contains
?select
select(sat, -contains(total))
select(sat, contains(total))
select(sat, !contains(total))
select(sat, contains("total:))
""
""
select(sat, contains("total"))
select(sat, !contains("total"))
select(sat, !contains("total"))
select(sat, -contains("total"))
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range)
sat %>% select(-contains("total"))
sat %>% select(-contains("total")) %>% gather(part_sex, count, -score_range)
?separate
j <- sat %>% select(-contains("total")) %>% gather(part_sex, count, -score_range)
j
separate(j, part_sex, c("part", "sex"))
nxt()
submit()
play()
h <- separate(j, part_sex, c("part", "sex"))
h
?group_by
group_by(h, part, sex)
?mutate
submit()
ls
rm(list=ls())
getwd()
dir()
library(dplyr)
getwd()
cd Quiz
ls
dir()
cd Quiz
dir Quiz
dir("./Quiz")
setwd("/Volumes/Bloom-HD-4/@dev/dev/coursera/Cleaning_Data/Week3/Quiz")
dir("data")
ida_house <- read.csv("/getdata-data-ss06hid.csv")
ida_house <- read.csv("./getdata-data-ss06hid.csv")
ida_house <- read.csv("./getdata-data-ss06hid.csv")
ida_house <- read.csv("./data/getdata-data-ss06hid.csv")
str(ida_house)
head(ida_house,2)
ida_house[which(ida_house$ACR==3 & ida_house$AGS==6),]
ida_house[which(ida_house$ACR==3 & ida_house$AGS==6),]
head(ida_house[which(ida_house$ACR==3 & ida_house$AGS==6),],3)
install.packages("jpeg")
library(jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "./data/jeff.jpg")
jpeg("./data/jeff.jpg")
jeff <- jpeg("./data/jeff.jpg")
dir("./data")
?jpeg
jeff <- jpeg("./data/jeff.jpg", native="TRUE")
readJPEG("./data", native= TRUE)
readJPEG("./data/jeff.jpg", native= TRUE)
jeff_pic <- readJPEG("./data/jeff.jpg", native= TRUE)
quantile(jeff_pic)
quantile(jeff_pic, c(0.3,0.8))
gdp_file_url <- ('http://data.worldbank.org/data-catalog/GDP-ranking-table.csv')
gdp_file <- ('./data/gdp.csv')
ed_file_url  <- ('http://data.worldbank.org/data-catalog/ed-stats')
ed_file <- ("./data/ed.csv)
download.file(gdp_file_url, gdp_file, method='curl')
download.file(ed_file_url, ed_file, method='curl')
:
""
''
)
!
dlsa;ld;s'a'
``
gdp_file_url <- ('http://data.worldbank.org/data-catalog/GDP-ranking-table.csv')
gdp_file <- ('./data/gdp.csv')
ed_file_url  <- ('http://data.worldbank.org/data-catalog/ed-stats')
ed_file <- ("./data/ed.csv)
""
)
"
ed_file_url  <- ('http://data.worldbank.org/data-catalog/ed-stats')
ed_file <- ("./data/ed.csv")
download.file(gdp_file_url, gdp_file, method='curl')
download.file(ed_file_url, ed_file, method='curl')
ida_house[which(ida_house$ACR==3 & ida_house$AGS==6),]
head(ida_house[which(ida_house$ACR==3 & ida_house$AGS==6),],3)
ed_file_url <- ('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv')
ed_file <- ("./data/ed.csv")
gdp_file_url  <- ('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv')
gdp_file <- ("./data/gdp.csv")
download.file(gdp_file_url, gdp_file, method='curl')
download.file(ed_file_url, ed_file, method='curl')
gdp <- read.csv("./data/gdp.csv")
head(gdp.csv,3)
head(gdp,3)
?fread
?fread
library(data.table)
?fread
gdp = fread(gdp_file, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
gdp
edu = fread(ed_file)
edu
head edu
head(edu)
str(edu)
view(edu)
View(edu)
merge = merge(gdp, edu, by = 'CountryCode')
merge
View merge
gdp_edu = merge(gdp, edu, by = 'CountryCode')
View(gdp_edu)
nrow(gdp_edu)
arrange(merge, desc(Rank))[13, Economy]
tapply(merge$Rank, merge$`Income Group`, mean)
tapply(gdp_wdu$Rank, gdp_edu$`Income Group`, mean)
tapply(gdp_edu$Rank, gdp_edu$`Income Group`, mean)
?tapply
merge$RankGroups <- cut2(merge$Rank, g=5)
library(data.table)
install.packages("Hmisc")
cut2
cut
cut()
library(Hmisc)
cut2
cut2
gdp_edu$RankGroups <- cut2(gdp_edu$Rank, g=5)
table(gdp_edu$RankGroups, gdp_edu$`Income Group`)
?arrange
arrang(gdp_edu)
arrange(gdp_edu)
arrange(gdp_edu, rank())
arrange(gdp_edu, desc(Rank))
head(arrange(gdp_edu, desc(Rank)),3)
head(arrange(gdp_edu, desc(Rank)),14)
head(arrange(gdp_edu, desc(Rank)),14)
head(arrange(gdp_edu, desc(Rank)),13)
arrange(gdp_edu, desc(Rank))
arrange(gdp_edu, desc(Rank))[13,]
arrange(gdp_edu, desc(Rank))[13,Economy]
ct.dat <- table("Yes","Yes")
ct.dat
ct.dat <- table(c("yes", "yes"))
ct.dat
ct.dat <- table(c("Voted.for.x", "vited.for.x.last.time"))
ct.dat
ct.dat <- table(c("Voted.for.x", "voted.for.x.last.time"))
ct.dat
ct.dat[1,1]="Yes"
ct.dat[1]
ct.dat[1] <- "Yes"
ct.dat
ct.dat[1][1] <- "Yes"
ct.dat
ct.dat[1]
ct.dat[2]
ct.dat[2] <- 'Yes'
ct.dat
ct.dat[2][1] <- 'Yes'
ct.dat
ct.dat[1]
ct.dat[1,]
ct.dat[1][3]
ct.dat[1][2]
ct.dat[1][2] <- "Yes"
ct.dat[2][2] <- "Yes"
ct.dat[2][1] <- "Yes"
ct.dat
ct.dat[2][2] <- "Yes"
ct.dat[2][2] <- "Yes"
ct.dat[2,2] <- "Yes"
class(ct.dat)
ct.dat[2,2] <- "Yes"
cd <-read.table("./ct.dat",header=T)
ct <-read.table("./ct.dat",header=T)
ct <-read.table("./ct.dat",header=T)
ct <-read.table("./ct.dat",header=T)
ct
factors)ct
factors(ct)
c(1, 1:3, c(5, 8), 13)
x <- (1:5) ^ 2
x
x[c(-2, -4)]
x[c(1, 3, 5)]
(three_d_array <- array(
1:24,
dim = c(4, 3, 2),
dimnames = list(
c("one", "two", "three", "four"),
c("ein", "zwei", "drei"),
c("un", "deux")
)
))
three_d_array
z <- x(1,2,NA,8,3,NA,3)
z <- c(1,2,NA,8,3,NA,3)
z
is.na(z)
any(is.na(z))
any(!is.na(z))
class(z)
as.numeric(z)
zfactor <- factor(z)
zfactor
as.numeric(zfactor)
getwd()
setwd("/Volumes/Bloom-HD-4/@dev/dev/coursera/Cleaning_Data/Week4")
dir()
pums_file_url <- ('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv')
pums_file <- ("./data/pums.csv")
download.file(pums_file_url, pums_file, method='curl')
pums <- read.csv("./data/pums.csv")
str(pums)
?strsplit
names(pums)
strsplit(poms,"wgtp, fixed=TRUE)
)
;
''
""
))
.
_
""
strsplit(poms,"wgtp", fixed=TRUE)
poms
pom
strsplit(pums,"wgtp", fixed=TRUE)
strsplit(names(pums),"wgtp", fixed=TRUE)
unlist(strsplit(names(pums),"wgtp", fixed=TRUE))
unlist(strsplit(names(pums),"wgtp"))
strsplit(names(pums),"wgtp")
gdp_file_url <- ('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv')
gdp_file <- ("./data/gdp.csv")
download.file(gdp_file_url, gdp_file, method='curl')
gdp <- read.csv("./data/gdp.csv")
str(gdp)
head(gdp)
head(gdp,12)
class(gdp)
gdp[,X3]
gdp[,3]
gdp[,4]
gdp
head(gdp,12)
gdp[,5]
gdp[,5]
gdp[,5]
gdp[,5]
gdp[,5]
?grep
grep(^[0-9], gdp[,5])
grep("^[0-9]", gdp[,5])
grep("^[0-9]+*", gdp[,5])
grep("^[0-9]+.*", gdp[,5])
head(gdp,12)
head(gdp,12)
grep("^[0-9]+.*", gdp[,5])
gdp[,5]
head(gdp[,5])
grep("^[0-9]+.*", gdp[,5])
grepl("^[0-9]+.*", gdp[,5])
grep("^[0-9]+.*", gdp[,5])
gdp[,5]
sub(",","",gdp[,5])
sub("\,", "" , gdp[,5])
sub("\," , "" , gdp[,5])
sub("," , "" , gdp[,5])
head(gdp[,5],12)
head(sub("," , "" , gdp[,5]),12)
head(gsub("," , "" , gdp[,5]),12)
mean(head(gsub("," , "" , gdp[,5]),12))
(head(gsub("," , "" , as.numeric(gdp[,5]),12))
)
(head(gsub("," , "" , as.numeric(gdp[,5]),12))
)
as.numeric(gdp[,5])
(head(gsub("," , "" , gdp[,5]),12))
(head(as.numeric((gsub("," , "" , gdp[,5])),12))
)
(head(as.numeric((gsub("," , "" , gdp[,5])),12)
)
)
as.numeric(gsub("," , "" , gdp[,5]))
mean(as.numeric(gsub("," , "" , gdp[,5])),na.rm=TRUE)
mean(as.numeric(gsub("," , "" , gdp[,5])),na.rm=TRUE)
as.numeric(gsub("," , "" , gdp[,5]))
as.numeric(gsub("," , "" , gdp[,5]))
?as.numeric
mean(as.numeric(gsub("," , "" , gdp[,5])),na.rm=TRUE)
as.numeric(gsub("," , "" , gdp[,5]))
x <- as.numeric(gsub("," , "" , gdp[,5]))
x
mean(x)
mean(x,na.rm=TRUE)
mean(x,na.rm=TRUE)
?average
average
?mean
?mean
mean(x,na.rm=TRUE)
gdp[,5]
view(gdp)
View(gdp)
gdp[1:194,5]
x <- as.numeric(gsub("," , "" , gdp[1:194,5]))
mean(x)
mean(x, na.rm=TRUE)
names(gdp)
gdp$X.2
grep("^United", gdp$X.2)
grep("^United", gdp$X.2)
gdp$X.2
grep("^United", gdp$X.2)
grep("^United", gdp$X.2)
?grep
grep("^United", gdp$X.2)
View(gdp)
edu_file_url <- ('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv')
gdp_file <- ("./data/edu.csv")
download.file(gdp_file_url, gdp_file, method='curl')
fread(edu_file)
fread("./edu.csv")
dir("./data")
fread("./data/edu.csv")
edu <- fread("./data/edu.csv")
edu
view(edu)
View(edu)
rm(list=ls())
gdp_file_url <- ('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv')
gdp_file <- ("./data/gdp.csv")
download.file(gdp_file_url, gdp_file, method='curl')
edu_file_url <- ('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv')
edu_file <- ("./data/edu.csv")
download.file(edu_file_url, edu_file, method='curl')
edu <- fread("./data/edu.csv")
edu
View(edu)
gdp <- fread("./data/gdp.csv", skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
class(gdp)
View(gdp)
gdp_edu <-  merge(gdp, edu, by = 'CountryCode')
View(gdp_edu)
notes <- gdp_edu$`Special Notes`
notes
grep("Fiscal year end: June 30", notes)
length(grep("Fiscal year end: June 30", notes))
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
amzn
smapleTimes = index(amzn)
sampleTimes = index(amzn)
str(sampleTimes)
class(sampleTimes)
time()
?time()
View(sampleTimes)
samplTimes$year
sampleTimes$year
library(lubridate)
install.packages("lubridate")
library(lubridate)
year(sampleTimes)
year(sampleTimes) == 2012
length(year(sampleTimes) == 2012)==TRUE)
year(sampleTimes) == 2012) ==TRUE
year(sampleTimes) == 2012)
year(sampleTimes) == 2012
(year(sampleTimes) == 2012) == TRUE
which(sampleTimes) == 2012)
which(sampleTimes) == 2012))
which(sampleTimes) == 2012
sampleTimes == 2012
who(sampleTimes == 2012)
sampleTimes == 2012
which(sampleTimes == 2012)
x <- sampleTimes == 2012
which(x)
which(x, arr.ind=TRUE)
x
class(x)
which(x)
x
sampleTimes == 2012
year(sampleTimes) == 2012
year(sampleTimes) == 2012
which(year(sampleTimes) == 2012)
length(which(year(sampleTimes) == 2012))
length(which(year(sampleTimes) == 2012))
year(sampleTimes)
day(sampleTimes)
weekday(sampleTimes)
weekdays(sampleTimes)
x12 <- sampleTimes[year==2012]
x12 <- sampleTimes[1]
x12 <- sampleTimes[2]
sampleTimes[2]
sampleTimes[1]
sampleTimes[2]
sampleTimes[3]
funnction(x) { return(x) }
function(x) { return(x) }
funnction(1)
function(1)
retyear <- function(x) {return(x)}
retyear("a")
retyear <- function(x) { y <- year(x); if(y == 2012) { return(x)}
}
retyear <- function(x) { y <- year(x)
if( y == 2012) { return(x) }}
sampletimes[1]
sampleTimes[1]
sampleTimes[2000]
sampleTimes[2000]
sampleTimes[1000]
sampleTimes[1500]
retyear(sampleTimes[1500])
z <- retyear <- function(x) { y <- year(x)
if( y == 2012) { return(x) }}
z <- retyear(sampleTimes[1500])
z
class(z)
weekdays(z)
sapply(samplTimes,retyear(x))
sapply(sampleTimes,retyear(x))
sapply(sampleTimes,retyear
)
sapply(sampleTimes,retyear
)
sapply(sampleTimes,retyear)
y <- sapply(sampleTimes,retyear)
y
head(y)
head(y.25)
head(y,25)
y <- sapply(sampleTimes, function(x) { y <- year(x)
if( y == 2012) { return(x) }})
y
head(y)
y <- sapply(sampleTimes, function(x) { retunr(x))
y <- sapply(sampleTimes, function(x) { return(x) }
)
y
y <- sapply(sampleTimes, function(x) { if(year(x) == 2012) {return(x) }} )
y
head(y)
y <- sapply(sampleTimes, function(x) { if(year(x) == 2012) {return(x) }} )
y
y
y
unlist(y)
weekdays(unlist(y))
weekdays(unlist(y)) == Mon
weekdays(unlist(y)) == "Mon"
which(weekdays(unlist(y)) == "Mon")
length(which(weekdays(unlist(y)) == "Mon"))
?fread
arec <- fread("./data/test_record.txt")
arec <- fread("./data/test_record.txt")
setwd("/Volumes/Bloom-HD-4/@dev/dev/coursera/Cleaning_Data/Week4/project")
arec <- fread("./data/test_record.txt")
str(arec)
dir()
dir("./data")
arec <- fread("./data/trec_body_y.txt")
str(arec)
arec <- fread("./data/trec_body_z.txt")
arec <- fread("./data/trec_xtest.txt")
str(arec)
dir()
dir()
dir()
dir("./data")
a <- fread("./data/X_test.txt")
pwd
a <- fread("./data/'UCI HAR Dataset'/X_test.txt")
setwd("/Volumes/Bloom-HD-4/@dev/dev/coursera/Cleaning_Data/Week4/project/data/UCI HAR Dataset/test")
a <- fread("X_test.txt")
srt(a)
str(a)
